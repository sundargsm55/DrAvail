@model DrAvail.Models.Doctor
@using static DrAvail.Services.Utilities
@{
    ViewData["Title"] = Model.Name;
    var age = DateTime.Now.Year - Model.DateOfBirth.Year;
}

<div class="row">
    <div class="col-md-4 float-left">
        <h4>Details</h4>
        <a asp-action="Index">Back to List</a>
    </div>
    <div class="col-md-8 float-right text-right">
        <div class="btn-block" id="divBtnBlock">
            @if ((await AuthorizationService.AuthorizeAsync(User, Model, Operations.Update)).Succeeded)
            {
                <a class="btn btn-warning" asp-action="Edit" asp-route-id="@Model.ID">
                    <i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit
                </a> <text> | </text>
            }
            @if ((await AuthorizationService.AuthorizeAsync(User, Model, Operations.Delete)).Succeeded)
            {
                <a class="btn btn-outline-danger m-1 rounded" asp-action="Delete" asp-route-id="@Model.ID">
                    <i class="fa fa-trash" aria-hidden="true"></i> Delete
                </a>
            }
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-8">
        <div class="card text-dark bg-light mb-3">
            <div class="row">
                <div class="col float-left">
                    @{
                        var user = UserManager.FindByIdAsync(Model.OwnerID).Result;
                        if (user != null && user.ProfilePicture != null)
                        {
                            <img class="card-img" style="border-bottom-left-radius: 20px; border-top-left-radius: 20px;object-fit:cover;" src="data:image/*;base64,@(Convert.ToBase64String(user.ProfilePicture))">
                        }
                        else
                        {
                            if ("Male".Equals(Model.Gender.ToString()))
                            {
                                @*<div class="col-md-3">*@
                                <img class="img-fluid card-img" style="border-bottom-left-radius:20px;border-top-left-radius:20px;object-fit:cover" src="/Images/user.png" asp-append-version="true" alt="...">
                                @*</div>*@
                            }
                            else
                            {
                                @*<div class="col-md-3">*@
                                <img class="img-fluid card-img" style="border-bottom-left-radius: 20px; border-top-left-radius: 20px" src="/Images/user-female.png" asp-append-version="true" alt="...">
                                @*</div>*@
                            }
                        }
                    }
                </div>
                <div class="col float-right">
                    <div class="card-body">
                        @*<div class="col-md-6 float-left">*@
                        <h5 class="card-title">
                            @Html.DisplayFor(modelItem => Model.Name)
                        </h5>
                        <input type="hidden" asp-for="ID" id="txtDoctorID" />
                        <p class="card-text">@Html.DisplayFor(modelItem => Model.Degree)</p>
                        <p class="card-text">@Html.DisplayFor(modelItem => Model.Speciality)</p>
                        @*<p class="card-text">@Html.DisplayFor(modelItem => Model.Age) years old</p>*@
                        <p class="card-text">@age years old</p>
                        <p class="card-text text-muted">
                            @Html.DisplayFor(modelItem => Model.Experience) years experience overall
                        </p>
                        <text>Verification Status: </text>
                        @if (Model.IsVerified)
                        {
                            <span class="card-text text-success">
                                @*<i class="fa fa-check-circle" style="color:green"></i>*@
                                Verified
                            </span>
                        }
                        else
                        {
                            <span class="card-text text-danger">Pending</span>
                        }
                        <br />
                        <br />
                        @if (!string.IsNullOrWhiteSpace(Model.Summary))
                        {
                            <p class="font-weight-bold">Bio: </p>
                            <p class="card-text">@Html.DisplayFor(modelItem => Model.Summary)</p>
                        }
                        @*</div>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card float-right w-75">
            <h6 class="card-header">Availability</h6>
            <div class="card-body">
                @if (Model.CurrentAvailability.CurrentStartDateTime == null || Model.CurrentAvailability.CurrentEndDateTime == null)
                {
                    <h6>Mon-Fri</h6>
                    <p class="card-text">@Model.CommonAvailability.CommonDays.MorningStartTime.ToShortTimeString() - @Model.CommonAvailability.CommonDays.MorningEndTime.ToShortTimeString()</p>
                    <p class="card-text">@Model.CommonAvailability.CommonDays.EveningStartTime.ToShortTimeString() - @Model.CommonAvailability.CommonDays.EveningEndTime.ToShortTimeString()</p>
                    <br />
                    @if (Model.CommonAvailability.IsAvailableOnWeekend)
                    {
                        <h6>Sat & Sun</h6>
                        <p class="card-text">@Model.CommonAvailability.Weekends.MorningStartTime.ToShortTimeString() - @Model.CommonAvailability.Weekends.MorningEndTime.ToShortTimeString()</p>
                        <p class="card-text">@Model.CommonAvailability.Weekends.EveningStartTime.ToShortTimeString() - @Model.CommonAvailability.Weekends.EveningEndTime.ToShortTimeString()</p>
                    }
                }
                else
                {
                    @if (CompareDateTime(Model.CurrentAvailability.CurrentStartDateTime.Value, DateTime.Now) == DateTimeRelation.IsEarlier
           && CompareDateTime(Model.CurrentAvailability.CurrentEndDateTime.Value, DateTime.Now) == DateTimeRelation.IsLater)
                    {
                        @if (!"Available".Equals(Model.CurrentAvailability.Status))
                        {
                            <text>Status: On Vacation</text>
                        }
                        <br />
                        @if (Model.CurrentAvailability.Hospital != null)
                        {
                            <p class="card-text">
                                <i class="fa fa-map-marker" aria-hidden="true" style="color:red"></i>
                                @Model.CurrentAvailability.Hospital.Name, @Model.CurrentAvailability.Hospital.City
                            </p>
                        }
                        <p class="card-text">
                            @*<text>Contact Preference: </text>*@
                            <i class="fa fa-phone" aria-hidden="true" style="color:orange"></i>
                            @Model.CurrentAvailability.ContactPreference
                        </p>
                        <p class="text-muted">
                            <i class="fa fa-clock-o" aria-hidden="true" style="color:lightgreen"></i>
                            <text>Durtaion between </text>
                        </p>
                        <p class="card-text">
                            <i class="fa fa-calendar" aria-hidden="true"> </i>
                            @Model.CurrentAvailability.CurrentStartDateTime
                        </p>
                        <p class="card-text">
                            <i class="fa fa-calendar" aria-hidden="true"> </i>
                            @Model.CurrentAvailability.CurrentEndDateTime
                        </p>
                    }
                    else
                    {
                        <h6>Mon-Fri</h6>
                        <p class="card-text">@Model.CommonAvailability.CommonDays.MorningStartTime.ToShortTimeString() - @Model.CommonAvailability.CommonDays.MorningEndTime.ToShortTimeString()</p>
                        <p class="card-text">@Model.CommonAvailability.CommonDays.EveningStartTime.ToShortTimeString() - @Model.CommonAvailability.CommonDays.EveningEndTime.ToShortTimeString()</p>
                        <br />
                        @if (Model.CommonAvailability.IsAvailableOnWeekend)
                        {
                            <h6>Sat & Sun</h6>
                            <p class="card-text">@Model.CommonAvailability.Weekends.MorningStartTime.ToShortTimeString() - @Model.CommonAvailability.Weekends.MorningEndTime.ToShortTimeString()</p>
                            <p class="card-text">@Model.CommonAvailability.Weekends.EveningStartTime.ToShortTimeString() - @Model.CommonAvailability.Weekends.EveningEndTime.ToShortTimeString()</p>
                        }
                    }
                }

            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-4">
        <div class="card" style="border-radius:20px">
            <div class="card-header bg-secondary text-white" style="border-top-left-radius:20px; border-top-right-radius:20px">
                <h6 class="card-title">Hospital</h6>
            </div>
            @*<div class="card-header-pills" hidden>
                    <ul class="nav nav-pills mb-3" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" style="border-top-left-radius:20px" id="hospitals-tab" data-toggle="tab" href="#hospital" role="tab" aria-controls="hospitals" aria-selected="true">Hospital(s)</a>
                        </li>
                        <li class="nav-item" style="border-top-left-radius:20px">
                            <a class="nav-link" id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact" aria-selected="false">Contact</a>
                        </li>
                    </ul>
                </div>*@
            <div class="card-body" id="myTabContent">
                @*<div class="tab-pane fade show active" id="hospital" role="tabpanel" aria-labelledby="home-tab">*@
                <p>
                    <a class="text-primary" asp-action="Details" asp-controller="Hospitals" asp-route-id="@Model.HospitalID">
                        <i class="fa fa-map-marker" aria-hidden="true" style="color:red"></i>
                        @Html.DisplayFor(modelItem => Model.Hospital.Name)
                    </a>
                </p>
                <p class="card-text">@Html.DisplayFor(modelItem => Model.Hospital.Address), @Model.Hospital.City</p>
                @*</div>
                    <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">
                        <p>
                            <a href="tel:@Model.PhoneNumber">@Html.DisplayFor(model => model.PhoneNumber)</a>
                        </p>
                        <p class="card-text">@Html.DisplayFor(modelItem => Model.EmailId)</p>
                    </div>*@
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-light">
            <div class="card-header"><h6 class="card-title">Contact</h6></div>
            <div class="card-body">
                <p class="card-text" hidden>
                    <i class="fa fa-map-marker" aria-hidden="true" style="color:red"></i>
                    @Model.City, @Model.District (dist) - @Model.Pincode
                </p>
                <p class="card-text">
                    @*<text>Contact Preference: </text>*@
                    <i class="fa fa-phone" aria-hidden="true"></i>
                    <a href="tel:@Model.PhoneNumber">@Model.PhoneNumber</a>
                </p>
                <p class="card-text">
                    @*<text>Contact Preference: </text>*@
                    <i class="fa fa-envelope" aria-hidden="true"></i>
                    <a href="mailto:@Model.EmailId">@Model.EmailId</a>
                </p>
            </div>
        </div>
    </div>
    <div id="showExperience" class="col-md-4" style="display:none">
        <div class="card bg-light">
            <div class="card-header"><h6 class="card-title">Experience(s)</h6></div>
            <div class="card-body" id="divExperienceCard">
                
            </div>
        </div>
    </div>
</div>
<br />
@if (!Model.IsVerified)
{
    @if ((await AuthorizationService.AuthorizeAsync(
User, Model, Operations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.ID" />
            <input type="hidden" name="status" value=true />
            <button type="submit" class="btn btn-xs btn-success">
                <i class="fa fa-check" aria-hidden="true"></i>
                Approve
            </button>
        </form>
    }

    @if ((await AuthorizationService.AuthorizeAsync(
User, Model, Operations.Reject)).Succeeded)
    {
        <button class="btn btn-danger" data-toggle="modal" data-target="#RejectModal">
            <i class="fa fa-times" aria-hidden="true"></i>
            Reject
        </button>

        @*<form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.ID" />
                <input type="hidden" name="status" value=false />
                <button type="submit" class="btn btn-xs btn-danger">Reject</button>
            </form>*@
        <!-- Modal -->
        <div class="modal fade" id="RejectModal" tabindex="-1" role="dialog" aria-labelledby="RejectModal" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Reject Reason</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form style="display:inline;" method="post" id="rejectForm">
                            <input type="hidden" name="id" value="@Model.ID" />
                            <input type="hidden" name="status" value=false />
                            <div class="form-group">
                                <label class="col-form-label">Reason:</label>
                                <textarea class="form-control" name="rejectReason" required></textarea>
                            </div>
                            @*<button type="submit" class="btn btn-xs btn-danger">Reject</button>*@
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-xs btn-danger" form="rejectForm">Reject</button>
                    </div>
                </div>
            </div>
        </div>
    }
}
<br />
<div class="btn-block" id="divBtnBlock" hidden>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, Operations.Update)).Succeeded)
    {
        <a class="btn btn-warning" asp-action="Edit" asp-route-id="@Model.ID">
            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
        </a> <text> | </text>
    }
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, Operations.Delete)).Succeeded)
    {
        <a class="btn btn-outline-danger m-1 rounded" asp-action="Delete" asp-route-id="@Model.ID">
            <i class="fa fa-trash" aria-hidden="true"></i>
        </a>
    }
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            $.getJSON(window.location.origin + "/Experiences/GetExperiences",
                { doctorID: $("#txtDoctorID").val() },
                function (response) {
                    if (response.length == 0) return false;
                    $("#showExperience").toggle('show');
                    $.each(response, function (i, v) {
                        $("#divExperienceCard").append("<dl><dt class=\"font-weight-bold\">" + v.hospitalClinicName + "</dt>"
                            + "<div style=\"border-left: 1px solid #CCC;padding: 0 16px;\"><dd class=\"col-sm-9 text-muted\">" + v.location + "</dd>"
                            + "<dd class=\"col-sm-9\">" + new Date(v.startDate).toLocaleString('default', { month: 'short', year: "numeric" })
                            + " - "
                            + new Date(v.endDate).toLocaleString('default', { month: 'short', year: "numeric" })+ "</dd>" 
                            + "<dd class=\"col-sm-9\">" + v.title + "</dd>"
                            + "<dd class=\"col-sm-9\">" + v.employementType + "</dd></div></dl>");
                    });
                });
        });
    </script>
}